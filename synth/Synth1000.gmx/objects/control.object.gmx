<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>load_synth();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left){
   stream_id = audio_play_sound(snd_sqr, 10, false);
   state = 1;
   }
if mouse_check_button_released(mb_left){
   audio_stop_sound(stream_id);
   state = 0;
   sample_playback_position = 0;        
   }
   
if keyboard_check_released(vk_control){
   switch(tracking){
        case 0: tracking = 1;
                break;
        case 1: tracking = 0;
                break;            
        }
   }
   
if keyboard_check_released(vk_up) &amp;&amp; play_key &lt; 88{
   play_key +=1;
   }
if keyboard_check_released(vk_down) &amp;&amp; play_key &gt; 1{
   play_key -=1;
   }
   
audio_sound_pitch(stream_id, key[play_key, pitch]);
audio_sound_gain(stream_id, 0.75, 0);

sample_length           = audio_sound_length(stream_id);
sample_speed            = sample_length/room_speed;
if sample_playback_position + sample_speed &lt;= sample_length &amp;&amp; state{
   sample_playback_position += sample_speed;
   }
else{
   sample_playback_position = 0;
   }
if tracking{   
   audio_sound_set_track_position(stream_id, sample_playback_position);
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i       = 81;
var loops   = 0;

draw_set_color(c_black);
repeat(20){
   draw_text(8,8+(20*loops), string(i)+': '+string(key[i,frequency])+', pitch: '+string(key[i,pitch]));
   loops    += 1;
   i        -= 4;
   }

draw_text(600, 8, string(fps));   
draw_text(600, 28, 'Key: '+string(play_key)+', Play: '+string(sample_playback_position)+'/'+string(sample_length));


onscreen_keyboard();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
